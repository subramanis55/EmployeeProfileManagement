<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="EmployeePhoto.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EgAACxIB0t1+/AAABGFJREFUeF7tm09sVFUUh1sBTRBMNHGhYSeycUli4oKYqCQ2vUNY0A21M1M0swAb
        Vkal7/ESE0P7XiXpEljJAoj7TgsbFrpoE1PExLiw6E4N4J9EjA4huZzz5piH7QEyMPfdmbm/L/nSSdu5
        59zfvHfnzsybIQAAAAAAAAAAAPQi9tLoy3ap8r5dNOftYuWKbVZ+s01zuy3dXjSr7b+ZI/y/cjfwONiv
        G1vswmiVAl6h0G1nmuX8vjSGDAc6gY7sCgV5bWOwnWrW6MwxMix4GPby2DY64s/qYT6GPCaNLWWAhr20
        70U6Yr9VA+yKNDbVkHLgXvLwm+ZHPbguyjXwIPyffNlxeuSv11zFcnQPTtb8h0k1pXzY2AUzogZUhqHv
        jvJ9fle2mo8qbVEvv75Z2gkPWgZqejBlaiaknfCgB+ARXuF2W7Ms7YSFXRjZpQfiwaXKTmkrHNpvrClh
        +LBpDktb4UCTPqeG4UPqRdoKB1r/v1HD8KJZlbbCgY66m3oYXrwhbYUDHXUtJQhPmpa0FQ54ADyDJcgz
        eBL2DLahnsELMc/kl5loYfgwxLciGLwZ5xm8He2Z9gcyZk0PpgSb5oegP5BhaP19Ww2nDJdwwVYOLUX4
        UN4nclnKVTUoJ1Kti3uflvKAKe3CLL4IABdm6eQPgtMzgcZG+A8GF+f2CLxD6coWlbeai/tGZVjQCbxH
        z79kwV+20MJ9oPIFjdD3+d2C36+hUI+Q/DWkVTqyb9LPVm77dvsrSk1z2Db3vyR3AwAAAAAAoBMaSbK1
        emzm1ckofaceZ5/UouxCLUqXye/qUfYT/e73WpzeZvk2/47/1v6f7EJ+n+Nz4zwGjyXDgvsxliRP1qez
        N/Lg4vRLCrRFt21XpLHyMWlsrsG1pCyoxXO761E6X4uz6xuCc2WU/kGenZxO36KXeMPSSjjwklCbTqdo
        ubimBlSi3AP3EsQyNZ7MP0NHXkKTvqGF4VPuic7C44c+mN0u7Q4SdrgapVVai3/RJt9L5gdHNHd0bOyL
        TdJ8f1ONZl6hia2sn2gfuMK9yzT6ETtMT7AN2hL+rUyuP4yyf8gPkyR5QibVH7ybfPYcTeDihgn1qbQs
        LR386MSzMr3eZiKZ20VPtN9rE+lz13p+SarHs3toJ/Gn0vxA2J7b7B6Zbm9B6/2bdKr+pTU+SPJzWjXO
        RmTavUEefpz+qzU8kEZZq2cehIk4fa0ep7fURgfa9BbPXWLww/ixky9QIz/rDQ6+dNb/+l4ys0PiKJdG
        49QWOhW/0hoLSXreW56amn9KYikPCv+01lCgfi6xlMNklB1QmghazkTicQu/yuW1T2siZPlNvMmPP31e
        YnIHhX9GawDmT8pnJCZ30K7njlYcsukdickdemH4nxKTO7SisFBicodWFBZKTO7QisJCickdWlFYKDG5
        QysKCyUmd2hFYaHE5A6tKCyUmNyhFYWFEpM7tKKwUGJyh1YUFkpMAAAAAAAAAAAAAACsY2joLrmub3og
        yYHOAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="EmployeePhoto.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EgAACxIB0t1+/AAABGFJREFUeF7tm09sVFUUh1sBTRBMNHGhYSeycUli4oKYqCQ2vUNY0A21M1M0swAb
        Vkal7/ESE0P7XiXpEljJAoj7TgsbFrpoE1PExLiw6E4N4J9EjA4huZzz5piH7QEyMPfdmbm/L/nSSdu5
        59zfvHfnzsybIQAAAAAAAAAAAPQi9tLoy3ap8r5dNOftYuWKbVZ+s01zuy3dXjSr7b+ZI/y/cjfwONiv
        G1vswmiVAl6h0G1nmuX8vjSGDAc6gY7sCgV5bWOwnWrW6MwxMix4GPby2DY64s/qYT6GPCaNLWWAhr20
        70U6Yr9VA+yKNDbVkHLgXvLwm+ZHPbguyjXwIPyffNlxeuSv11zFcnQPTtb8h0k1pXzY2AUzogZUhqHv
        jvJ9fle2mo8qbVEvv75Z2gkPWgZqejBlaiaknfCgB+ARXuF2W7Ms7YSFXRjZpQfiwaXKTmkrHNpvrClh
        +LBpDktb4UCTPqeG4UPqRdoKB1r/v1HD8KJZlbbCgY66m3oYXrwhbYUDHXUtJQhPmpa0FQ54ADyDJcgz
        eBL2DLahnsELMc/kl5loYfgwxLciGLwZ5xm8He2Z9gcyZk0PpgSb5oegP5BhaP19Ww2nDJdwwVYOLUX4
        UN4nclnKVTUoJ1Kti3uflvKAKe3CLL4IABdm6eQPgtMzgcZG+A8GF+f2CLxD6coWlbeai/tGZVjQCbxH
        z79kwV+20MJ9oPIFjdD3+d2C36+hUI+Q/DWkVTqyb9LPVm77dvsrSk1z2Db3vyR3AwAAAAAAoBMaSbK1
        emzm1ckofaceZ5/UouxCLUqXye/qUfYT/e73WpzeZvk2/47/1v6f7EJ+n+Nz4zwGjyXDgvsxliRP1qez
        N/Lg4vRLCrRFt21XpLHyMWlsrsG1pCyoxXO761E6X4uz6xuCc2WU/kGenZxO36KXeMPSSjjwklCbTqdo
        ubimBlSi3AP3EsQyNZ7MP0NHXkKTvqGF4VPuic7C44c+mN0u7Q4SdrgapVVai3/RJt9L5gdHNHd0bOyL
        TdJ8f1ONZl6hia2sn2gfuMK9yzT6ETtMT7AN2hL+rUyuP4yyf8gPkyR5QibVH7ybfPYcTeDihgn1qbQs
        LR386MSzMr3eZiKZ20VPtN9rE+lz13p+SarHs3toJ/Gn0vxA2J7b7B6Zbm9B6/2bdKr+pTU+SPJzWjXO
        RmTavUEefpz+qzU8kEZZq2cehIk4fa0ep7fURgfa9BbPXWLww/ixky9QIz/rDQ6+dNb/+l4ys0PiKJdG
        49QWOhW/0hoLSXreW56amn9KYikPCv+01lCgfi6xlMNklB1QmghazkTicQu/yuW1T2siZPlNvMmPP31e
        YnIHhX9GawDmT8pnJCZ30K7njlYcsukdickdemH4nxKTO7SisFBicodWFBZKTO7QisJCickdWlFYKDG5
        QysKCyUmd2hFYaHE5A6tKCyUmNyhFYWFEpM7tKKwUGJyh1YUFkpMAAAAAAAAAAAAAACsY2joLrmub3og
        yYHOAAAAAElFTkSuQmCC
</value>
  </data>
</root>